# {{ansible_managed}}

################################################################################
# Diamond Configuration File
################################################################################

################################################################################
### Options for the server
[server]

# Handlers for published metrics.
handlers = diamond.handler.graphite.GraphiteHandler{% if (diamond_log_level | logging_level_includes('debug')) %}, diamond.handler.archive.ArchiveHandler{% endif %}


# User diamond will run as
# Leave empty to use the current user
user = diamond

# Group diamond will run as
# Leave empty to use the current group
group = diamond

# Pid file
pid_file = /var/run/diamond.pid

# Directory to load collector modules from
collectors_path = {{diamond_collector_dir}}

# Directory to load collector configs from
collectors_config_path = /etc/diamond/collectors/

# Number of seconds between each collector load
# collectors_load_delay = 1.0

# Directory to load handler configs from
handlers_config_path = /etc/diamond/handlers/

# Directory to load handler modules from
handlers_path = /usr/share/diamond/handlers/

# Maximum number of metrics waiting to be processed by handlers.
# When metric queue is full, new metrics are dropped.
metric_queue_size = 16384


################################################################################
### Options for handlers
[handlers]

# daemon logging handler(s)
keys = rotated_file

### Defaults options for all Handlers
[[default]]

[[ArchiveHandler]]

# File to write archive log files
log_file = {{diamond_log_dir}}/archive.log

# Number of days to keep archive log files
days = 7

[[GraphiteHandler]]
### Options for GraphiteHandler

# Graphite server host
host = {{graphite_collection_host}}

# Port to send metrics to
port = {{graphite_line_receiver_port}}

# Socket timeout (seconds)
timeout = 15

# Batch size for metrics
batch = 1

################################################################################
### Options for collectors
[collectors]

[[default]]
### Defaults options for all Collectors

# Uncomment and set to hardcode a hostname for the collector path
# Keep in mind, periods are seperators in graphite
# hostname = my_custom_hostname

# If you prefer to just use a different way of calculating the hostname
# Uncomment and set this to one of these values:

# smart             = Default. Tries fqdn_short. If that's localhost, uses hostname_short

# fqdn_short        = Default. Similar to hostname -s
# fqdn              = hostname output
# fqdn_rev          = hostname in reverse (com.example.www)

# uname_short       = Similar to uname -n, but only the first part
# uname_rev         = uname -r in reverse (com.example.www)

# hostname_short    = `hostname -s`
# hostname          = `hostname`
# hostname_rev      = `hostname` in reverse (com.example.www)

# shell             = Run the string set in hostname as a shell command and use its
#                     output(with spaces trimmed off from both ends) as the hostname.

# hostname_method = smart
hostname = {{inventory_hostname_short}}

# Path Prefix and Suffix
# you can use one or both to craft the path where you want to put metrics
# such as: %(path_prefix)s.$(hostname)s.$(path_suffix)s.$(metric)s
# path_prefix = servers
path_prefix = {{graphite_host_prefix_wo_host}}
# path_suffix =

# Path Prefix for Virtual Machines
# If the host supports virtual machines, collectors may report per
# VM metrics. Following OpenStack nomenclature, the prefix for
# reporting per VM metrics is "instances", and metric foo for VM
# bar will be reported as: instances.bar.foo...
# instance_prefix = instances

# Default Poll Interval (seconds)
# interval = 300
interval = 60

################################################################################
# Default enabled collectors
################################################################################

[[CPUCollector]]
enabled = True
percore = False
# Disabling `percore` per default as it is of little use in our
# settings, and unnecessarily increases the number of metrics for
# hosts with many cores.

[[DiskSpaceCollector]]
enabled = True

[[DiskUsageCollector]]
enabled = True

[[LoadAverageCollector]]
enabled = True

[[MemoryCollector]]
enabled = True

[[NetworkCollector]]
enabled = True
# We want to match each interface. So a single '\S' would do. But the
# `interfaces` setting has to be a list. So we take a random letter (that is
# matched by the first list element anyways) and add it as second element to get
# a list.
interfaces = \S,x

[[VMStatCollector]]
enabled = True

################################################################################
### Options for logging
# for more information on file format syntax:
# http://docs.python.org/library/logging.config.html#configuration-file-format

[loggers]

keys = root

# handlers are higher in this config file, in:
# [handlers]
# keys = ...

[formatters]

keys = default

[logger_root]

# to increase verbosity, set DEBUG
level = {{diamond_log_level | logging_map_level_python}}
handlers = rotated_file
propagate = 1

[handler_rotated_file]

class = handlers.TimedRotatingFileHandler
level = DEBUG
formatter = default
# rotate at midnight, each day and keep 7 days
{# Instead of switching the output file to /dev/null, we'd like to switch    #}
{# the class to the NullHandler. But NullHandler does not yet exist in       #}
{# Debian Buster's Python :-/, so we resort to writing to /dev/null.         #}
args = ('{{(diamond_log_dir + '/diamond.log') if diamond_log_level != 'none' else '/dev/null'}}', 'midnight', 1, 7)

[formatter_default]

format = {{logging_default_format_python}}
datefmt = {{logging_default_format_python_date}}

################################################################################
### Options for config merging
# [configs]
# path = "/etc/diamond/configs/"
# extension = ".conf"
#-------------------------------------------------------------------------------
# Example:
# /etc/diamond/configs/net.conf
# [collectors]
#
# [[NetworkCollector]]
# enabled = True

[configs]
path = "{{diamond_collector_conf_dir}}"
extension = "{{diamond_collector_conf_extension}}"
